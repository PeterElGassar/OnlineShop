@model OnlineShop.Core.ViewModels.ProductManagerVM

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

@using (Html.BeginForm("Create", "ProductManager", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>Product</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="row">
                <div class="col-md-8">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.Product.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.DropDownListFor(model => model.Product.Category, new SelectList(Model.Categories, "Name", "Name"), "Product Category", new { @class = "form-control" })

                        </div>
                    </div>
                </div>

                <!---Image-->
                <div class="col-md-4">
                    <div class="form-group">
                        <div class="row">
                            @*@Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-md-2" })*@
                        </div>
                        <div class="row">
                            <div class="col-md-10 Perview-img">
                                <div class="inputFile-div">
                                    <input type="file" name="file" id="file" accept="image/*" />
                                </div>
                                <img class="imagePreview" src="~/Images/vga.png" alt="" width="300" height="350" />
                            </div>
                        </div>
                    </div>
                </div>
                <!---END Image-->

            </div>


            <!------>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script src="~/Scripts/MainScript.js"></script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
