@model OnlineShop.Core.ViewModels.ProductManagerVM

@{
    ViewBag.Title = "Edit";
}


@if (TempData["Error"] != null)
{
    <div class="alert alert-danger">
        @TempData["Error"]
    </div>
}
@if (TempData["Message"] != null)
{
    <div class="alert alert-success">
        @TempData["Message"]
    </div>
}

<h2>Edit</h2>


@using (Html.BeginForm("Edit", "ProductManager", FormMethod.Post, new { @id = "editeForm", encType = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Product</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Product.Id)
        @Html.HiddenFor(model => model.Product.Image)


        <div class="row">
            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Product.Name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Name, "", new { @class = "text-danger" })
                        @Html.ValidationMessage("NameNotUnique", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Product.Description, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Product.Price, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Product.Price, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Product.Category, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.DropDownListFor(model => model.Product.ProductCategoryId, new SelectList(Model.Categories, "Id", "Name"), "Product Category", new { @class = "form-control" })
                    </div>
                </div>
            </div>

            <!---Image-->
            <div class="col-md-4">
                <div class="form-group">
                    <div class="row">
                        @*@Html.LabelFor(model => model.Product.Image, htmlAttributes: new { @class = "control-label col-md-2" })*@
                    </div>
                    <div class="row">
                        <div class="col-md-10 Perview-img">
                            <div class="inputFile-div">
                                <input type="file" name="file" id="file" accept="image/*" />
                            </div>
                            <img class="imagePreview" src="~/Images/Uploads/Products/@Model.Product.Id/Thumbs/@Model.Product.Image" alt="" width="300" height="350" />
                        </div>
                    </div>
                </div>
            </div>
            <!---END Image-->

        </div>


        <!------>
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Update" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/MainScript.js"></script>
    <script src="~/Scripts/ValidationForm.js"></script>

}
